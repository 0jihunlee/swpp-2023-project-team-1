"""Modify models relatied to Feed

Revision ID: cfc17af8302c
Revises: 68b90ca43141
Create Date: 2023-10-28 17:24:24.698294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import app.models.guid

# revision identifiers, used by Alembic.
revision: str = 'cfc17af8302c'
down_revision: Union[str, None] = '68b90ca43141'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('image',
    sa.Column('id', app.models.guid.GUID(), nullable=False),
    sa.Column('origin_image', sa.TEXT(), nullable=False),
    sa.Column('mask_image', sa.TEXT(), nullable=False),
    sa.Column('modified_image', sa.TEXT(), nullable=False),
    sa.Column('user_id', app.models.guid.GUID(), nullable=False),
    sa.Column('post_id', app.models.guid.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f('fk_image_post_id_post'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_image_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_image')),
    sa.UniqueConstraint('user_id', 'post_id', name=op.f('uq_image_user_id'))
    )
    op.create_index(op.f('ix_image_post_id'), 'image', ['post_id'], unique=False)
    op.create_index(op.f('ix_image_user_id'), 'image', ['user_id'], unique=False)
    op.create_table('comment_like',
    sa.Column('id', app.models.guid.GUID(), nullable=False),
    sa.Column('is_liked', sa.Integer(), nullable=False),
    sa.Column('user_id', app.models.guid.GUID(), nullable=False),
    sa.Column('comment_id', app.models.guid.GUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name=op.f('fk_comment_like_comment_id_comment'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_comment_like_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment_like')),
    sa.UniqueConstraint('user_id', 'comment_id', name=op.f('uq_comment_like_user_id'))
    )
    op.create_index(op.f('ix_comment_like_comment_id'), 'comment_like', ['comment_id'], unique=False)
    op.create_index(op.f('ix_comment_like_user_id'), 'comment_like', ['user_id'], unique=False)
    op.alter_column('comment', 'content',
               existing_type=sa.VARCHAR(length=300),
               type_=sa.TEXT(),
               nullable=False)
    op.drop_constraint('uq_comment_post_id', 'comment', type_='unique')
    op.drop_constraint('uq_comment_user_id', 'comment', type_='unique')
    op.create_index(op.f('ix_comment_post_id'), 'comment', ['post_id'], unique=False)
    op.create_index(op.f('ix_comment_user_id'), 'comment', ['user_id'], unique=False)
    op.drop_constraint('fk_comment_user_id_user', 'comment', type_='foreignkey')
    op.drop_constraint('fk_comment_post_id_post', 'comment', type_='foreignkey')
    op.create_foreign_key(op.f('fk_comment_user_id_user'), 'comment', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_comment_post_id_post'), 'comment', 'post', ['post_id'], ['id'], ondelete='CASCADE')
    op.add_column('post', sa.Column('image_id', app.models.guid.GUID(), nullable=False))
    op.alter_column('post', 'content',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.TEXT(),
               nullable=False)
    op.create_index(op.f('ix_post_image_id'), 'post', ['image_id'], unique=False)
    op.create_index(op.f('ix_post_user_id'), 'post', ['user_id'], unique=False)
    op.drop_constraint('fk_post_user_id_user', 'post', type_='foreignkey')
    op.create_foreign_key(op.f('fk_post_image_id_image'), 'post', 'image', ['image_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_post_user_id_user'), 'post', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('post', 'post_image_url')
    op.alter_column('post_like', 'is_liked',
               existing_type=sa.BOOLEAN(),
               type_=sa.Integer(),
               existing_nullable=False,
               postgresql_using='is_liked::integer'
               )
    op.create_index(op.f('ix_post_like_post_id'), 'post_like', ['post_id'], unique=False)
    op.create_index(op.f('ix_post_like_user_id'), 'post_like', ['user_id'], unique=False)
    op.create_unique_constraint(op.f('uq_post_like_user_id'), 'post_like', ['user_id', 'post_id'])
    op.drop_constraint('fk_post_like_post_id_post', 'post_like', type_='foreignkey')
    op.drop_constraint('fk_post_like_user_id_user', 'post_like', type_='foreignkey')
    op.create_foreign_key(op.f('fk_post_like_user_id_user'), 'post_like', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_post_like_post_id_post'), 'post_like', 'post', ['post_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_post_like_post_id_post'), 'post_like', type_='foreignkey')
    op.drop_constraint(op.f('fk_post_like_user_id_user'), 'post_like', type_='foreignkey')
    op.create_foreign_key('fk_post_like_user_id_user', 'post_like', 'user', ['user_id'], ['id'])
    op.create_foreign_key('fk_post_like_post_id_post', 'post_like', 'post', ['post_id'], ['id'])
    op.drop_constraint(op.f('uq_post_like_user_id'), 'post_like', type_='unique')
    op.drop_index(op.f('ix_post_like_user_id'), table_name='post_like')
    op.drop_index(op.f('ix_post_like_post_id'), table_name='post_like')
    op.alter_column('post_like', 'is_liked',
               existing_type=sa.Integer(),
               type_=sa.BOOLEAN(),
               existing_nullable=False,
               postgresql_using='is_liked::boolean'
               )
    op.add_column('post', sa.Column('post_image_url', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_post_user_id_user'), 'post', type_='foreignkey')
    op.drop_constraint(op.f('fk_post_image_id_image'), 'post', type_='foreignkey')
    op.create_foreign_key('fk_post_user_id_user', 'post', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_post_user_id'), table_name='post')
    op.drop_index(op.f('ix_post_image_id'), table_name='post')
    op.alter_column('post', 'content',
               existing_type=sa.TEXT(),
               type_=sa.VARCHAR(length=500),
               nullable=True)
    op.drop_column('post', 'image_id')
    op.drop_constraint(op.f('fk_comment_post_id_post'), 'comment', type_='foreignkey')
    op.drop_constraint(op.f('fk_comment_user_id_user'), 'comment', type_='foreignkey')
    op.create_foreign_key('fk_comment_post_id_post', 'comment', 'post', ['post_id'], ['id'])
    op.create_foreign_key('fk_comment_user_id_user', 'comment', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_comment_user_id'), table_name='comment')
    op.drop_index(op.f('ix_comment_post_id'), table_name='comment')
    op.create_unique_constraint('uq_comment_user_id', 'comment', ['user_id'])
    op.create_unique_constraint('uq_comment_post_id', 'comment', ['post_id'])
    op.alter_column('comment', 'content',
               existing_type=sa.TEXT(),
               type_=sa.VARCHAR(length=300),
               nullable=True)
    op.drop_index(op.f('ix_comment_like_user_id'), table_name='comment_like')
    op.drop_index(op.f('ix_comment_like_comment_id'), table_name='comment_like')
    op.drop_table('comment_like')
    op.drop_index(op.f('ix_image_user_id'), table_name='image')
    op.drop_index(op.f('ix_image_post_id'), table_name='image')
    op.drop_table('image')
    # ### end Alembic commands ###
